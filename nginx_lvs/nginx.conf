user root;
worker_processes 4;
worker_rlimit_nofile 1000000;

error_log logs/error.log;
#error_log logs/error.log notice;
#error_log logs/error.log info;

#pid logs/nginx.pid;

events {
    use epoll;
    worker connections 300000;
}

http {
    include mime.types;
    default_type text/html;

    #log_format main '$remote_addr - $remote_user [$time_local] $request' 'status $body_bytes_sent "$http_referer"' '"$http_user_agent" "$http_x_forwarded_for"' 'upstream_response_time $upstream_response_time' 'msec $msec request_time $request_time';
    access_log off;
    server_tokens off;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    open_file_cache max=10240 inactive=60s;
    open_file_cache_valid 80s;
    open_file_cache_min_uses 1;
    lua_shared_dict gkey 50m;
    lua_shared_dict gpost lOm;
    lua_shared_dict gvar 80m;
    lua_shared_dict msg_queue 300m;
    lua_shared_dict gsqs 100m;
    lua_shared_dict gex_session 50m;

    keepalive_timeout O;
    #keepalive_timeout 600s;
    #keepalive_requests 10000;
    chunked_transfer_encoding off;
    #gzip on;
    lua_package_path "/usr/local/lib/lua/5.1/?.lua;;";

    upstream bk_mysql {
        drizzle_server 10.185.220.120:3306 protocol=mysql dbname=test user=he password=33Er3~#;
        drizzle_keepalive max=300 overflow=reject mode=single;
    }

    upstream bk_redis {
        server 10.185.220.120:6009;
        keepalive 1000;
    }

    upstream bk_svr_conf {
        server 10.195.194.47:9001;
        keepalive 1000;
    }

    server {
        listen 9500 default so_keepalive=on;
        server_name 10.185.194.47;
        set $pub_ip "120.26.57.240:9510";
        set $idm "121.40.249.246:8300";

        charset utf-8;
        #access_log logs/access.log main;

        location /redis_set_ex {
            include /usr/local/ip_limit.conf;
            set $key $arg_key;
            set $expire $arg_expire;
            redis2_query set $key $request_body;
            redis2_query expire $key $expire;
            redis2_paas bk_redis;
        }

        location /redis_expire {
            include /usr/local/ip_limit.conf;
            set $key $arg_key;
            set $expire $arg_expire;
            redis2_query expire $key $expire;
            redis2_paas bk_redis;
        }

        location /redis_persist {
            include /usr/local/ip_limit.conf;
            set $key $arg_key;
            redis2_query persist $key;
            redis2_paas bk_redis;
        }

        location /redis_set1 {
            include /usr/local/ip_limit.conf;
            set $key $arg_key;
            redis2_query set $key $request_body;
            redis2_query expire $key 86400;
            redis2_paas bk_redis;
        }

        location /redis_get {
            include /usr/local/ip_limit.conf;
            set $key $arg_key;
            redis2_query get $key;
            redis2_paas bk_redis;
        }

        location /redis_del {
            include /usr/local/ip_limit.conf;
            set $key $arg_key;
            redis2_query del $key;
            redis2_paas bk_redis;
        }

        location /mt_redis_set_ex {
            include /usr/local/ip_limit.conf;
            content_by_lua_block {
                local val=ngx.unescape_uri(ngx.var.arg_val)
                local resp=ngx.location.capture("/redis_set_ex?key=" .. ngx.var.arg_key ..
                    "&expire=" .. ngx.var.arg_expire, {
                        method = ngx.HTTP_POST, body = val
                })
            ngx.exit(resp.status)
            }
        }

    }



}




